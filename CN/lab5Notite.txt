D: Matricea diagonală (doar elementele de pe diagonala principală)
L: Matricea triunghiulară inferior strictă (fără diagonala principală)
U: Matricea triunghiulară superior strictă (fără diagonala principală)

A = D - L - U

x⁽ᵏ⁺¹⁾ = Tx⁽ᵏ⁾ + c

A · A^-1 = A^-1 · A = I 

-------------------------------------------------------------------------------
Metoda lui Jacobi

‖x⁽ᵏ⁾ - x⁽ᵏ⁻¹⁾‖ ≤ ((1-‖T‖)/‖T‖)·ε
Pornim de la descompunerea A = D - L - U și alegem:

M = D
N = L + U

Prin urmare:

T = D⁻¹(L + U)
c = D⁻¹b

Formula Iterativa : 
x⁽ᵏ⁺¹⁾ = D⁻¹(L + U)x⁽ᵏ⁾ + D⁻¹b

Formula pe componente:
x_i⁽ᵏ⁺¹⁾ = (1/a_ii) * (b_i - ∑(j≠i) a_ij * x_j⁽ᵏ⁾)


Exemplu :
2x₁ + 1x₂ = 5
1x₁ + 3x₂ = 10
Izolam necunoscutele:
x₁ = (5 - 1x₂)/2
x₂ = (10 - 1x₁)/3
Formele iterative vor fi:
x₁⁽ᵏ⁺¹⁾ = (5 - x₂⁽ᵏ⁾)/2
x₂⁽ᵏ⁺¹⁾ = (10 - x₁⁽ᵏ⁾)/3
Începem cu x⁽⁰⁾ = [0, 0]:
Iteratia1:
x₁⁽¹⁾ = (5 - 0)/2 = 2.5
x₂⁽¹⁾ = (10 - 0)/3 = 3.33
Iteratia2:
x₁⁽²⁾ = (5 - 3.33)/2 = 0.835
x₂⁽²⁾ = (10 - 2.5)/3 = 2.5
Matricea T pentru Jacobi : 
T = D⁻¹(L + U) = [1/2 0; 0 1/3] * [0 1; 1 0] = [0 1/2; 1/3 0]

det(A - λI) = 0
T - λI = [0-λ, -1/2; -1/3, 0-λ] = [-λ, -1/2; -1/3, -λ]
det(T - λI) = det([-λ, -1/2; -1/3, -λ]) = (-λ)·(-λ) - (-1/2)·(-1/3) = λ² - 1/6 = 0
λ² = 1/6
λ = ±√(1/6) = ±0.408
ρ(T) = max{|λ₁|, |λ₂|} = max{|0.408|, |-0.408|} = 0.408

-------------------------------------------------------------------------------
Metoda Gauss-Seidel

M = D - L (diagonala principală minus triunghiulară inferior strictă)
N = U (triunghiulară superior strictă)
A = D - L - U

Formula iterativă
T = (D - L)⁻¹U
c = (D - L)⁻¹b

x⁽ᵏ⁺¹⁾ = (D - L)⁻¹U·x⁽ᵏ⁾ + (D - L)⁻¹b

Formula pe componente:
x_i⁽ᵏ⁺¹⁾ = (1/a_ii) * (b_i - ∑(j<i) a_ij·x_j⁽ᵏ⁺¹⁾ - ∑(j>i) a_ij·x_j⁽ᵏ⁾)

Exemplu:
2x₁ + 1x₂ = 5
1x₁ + 3x₂ = 10

x₁⁽ᵏ⁺¹⁾ = (5 - 1·x₂⁽ᵏ⁾)/2
x₂⁽ᵏ⁺¹⁾ = (10 - 1·x₁⁽ᵏ⁺¹⁾)/3

Iteratia1:
x₁⁽¹⁾ = (5 - 1·0)/2 = 2.5
x₂⁽¹⁾ = (10 - 1·2.5)/3 = 2.5

Iteratia2:
x₁⁽²⁾ = (5 - 1·2.5)/2 = 1.25
x₂⁽²⁾ = (10 - 1·1.25)/3 = 2.917

T = (D - L)⁻¹U = [1/2 0; -1/6 1/3] · [0 -1; 0 0] = [0 -1/2; 0 1/6]

-------------------------------------------------------------------------------
SOR ( Successive Over-Relaxation )

M = D/ω - L (scalăm diagonala și scădem triunghiulara inferioară)
N = ((1-ω)/ω)·D + U (o combinație între diagonală și triunghiulara superioară)
A = D - L - U

Formula iterativă
T = (D - ωL)⁻¹·((1-ω)D + ωU)
c = ω·(D - ωL)⁻¹·b

x⁽ᵏ⁺¹⁾ = T·x⁽ᵏ⁾ + c

Formula pe Componente:
x_i⁽ᵏ⁺¹⁾ = (1-ω)·x_i⁽ᵏ⁾ + (ω/a_ii)·(b_i - ∑(j<i) a_ij·x_j⁽ᵏ⁺¹⁾ - ∑(j>i) a_ij·x_j⁽ᵏ⁾)

Alegerea parametrului ω
Valoarea optimă a lui ω pentru anumite tipuri de matrice (tridiagonale, ordonate consistent, etc.) este:
ω_O = 2/(1 + √(1-ρ²))
unde ρ este raza spectrală a matricei metodei Jacobi.

Exemplu:
2x₁ + 1x₂ = 5
1x₁ + 3x₂ = 10

ω_O = 2/(1 + √(1-0.408²)) ≈ 2/(1 + √(0.8335)) ≈ 2/(1 + 0.913) ≈ 2/1.913 ≈ 1.05

x₁⁽ᵏ⁺¹⁾ = (1-1.05)·x₁⁽ᵏ⁾ + (1.05/2)·(5 - 1·x₂⁽ᵏ⁾)
        = -0.05·x₁⁽ᵏ⁾ + 0.525·(5 - x₂⁽ᵏ⁾)
        = -0.05·x₁⁽ᵏ⁾ + 2.625 - 0.525·x₂⁽ᵏ⁾

x₂⁽ᵏ⁺¹⁾ = (1-1.05)·x₂⁽ᵏ⁾ + (1.05/3)·(10 - 1·x₁⁽ᵏ⁺¹⁾)
        = -0.05·x₂⁽ᵏ⁾ + 0.35·(10 - x₁⁽ᵏ⁺¹⁾)
        = -0.05·x₂⁽ᵏ⁾ + 3.5 - 0.35·x₁⁽ᵏ⁺¹⁾

Iteratia1 : 
x₁⁽¹⁾ = -0.05·0 + 2.625 - 0.525·0 = 2.625
x₂⁽¹⁾ = -0.05·0 + 3.5 - 0.35·2.625 = 3.5 - 0.92 = 2.58

Iteratia2 : 
x₁⁽²⁾ = -0.05·2.625 + 2.625 - 0.525·2.58 = -0.13 + 2.625 - 1.35 = 1.145
x₂⁽²⁾ = -0.05·2.58 + 3.5 - 0.35·1.145 = -0.13 + 3.5 - 0.40 = 2.97